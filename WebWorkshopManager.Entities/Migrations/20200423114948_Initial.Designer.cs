// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebWorkshopManager.Entities.Base;

namespace WebWorkshopManager.Entities.Migrations
{
    [DbContext(typeof(WebWorkshopManagerDataContext))]
    [Migration("20200423114948_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebWorkshopManager.Entities.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EngineId")
                        .HasColumnType("int");

                    b.Property<string>("EngineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Mileage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.HasIndex("EngineId");

                    b.ToTable("cars");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            Brand = "Volkswagen",
                            EngineId = 1,
                            EngineNumber = "ATD496532",
                            LicensePlate = "BP3666CC",
                            Mileage = 212654.451m,
                            Model = "Golf 4",
                            Vin = "WVWZZZ1JZ3W584008",
                            Year = 2003
                        });
                });

            modelBuilder.Entity("WebWorkshopManager.Entities.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            ContactNumber = "0879590946",
                            Email = "borislav.nikolov.37@gmail.com",
                            Name = "Борислав Николаев Николов"
                        });
                });

            modelBuilder.Entity("WebWorkshopManager.Entities.Models.Engine", b =>
                {
                    b.Property<int>("EngineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FuelType")
                        .HasColumnType("int");

                    b.Property<int>("HorsePower")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EngineId");

                    b.ToTable("engines");

                    b.HasData(
                        new
                        {
                            EngineId = 1,
                            FuelType = 2,
                            HorsePower = 101,
                            Name = "1.9 TDI"
                        },
                        new
                        {
                            EngineId = 2,
                            FuelType = 1,
                            HorsePower = 150,
                            Name = "1.8T"
                        });
                });

            modelBuilder.Entity("WebWorkshopManager.Entities.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("JobNumber")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("JobId");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("WorkerId");

                    b.ToTable("jobs");
                });

            modelBuilder.Entity("WebWorkshopManager.Entities.Models.JobItem", b =>
                {
                    b.Property<int>("JobItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("JobItemId");

                    b.HasIndex("JobId");

                    b.HasIndex("ProductId");

                    b.ToTable("job_items");
                });

            modelBuilder.Entity("WebWorkshopManager.Entities.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantityInStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "Смяна на масло",
                            ProductType = 3,
                            QuantityInStock = 1m,
                            UnitPrice = 2.40m
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "Масло Castrol EDGE Turbo Diesel Titanium FST 5W40 - 4Л",
                            ProductType = 1,
                            QuantityInStock = 5m,
                            UnitPrice = 57m
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "Труд",
                            ProductType = 4,
                            QuantityInStock = 1m,
                            UnitPrice = 5.2m
                        });
                });

            modelBuilder.Entity("WebWorkshopManager.Entities.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Permissions")
                        .HasColumnType("int");

                    b.HasKey("RoleId");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Системен администратор",
                            Permissions = 254
                        });
                });

            modelBuilder.Entity("WebWorkshopManager.Entities.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@autoservicesoft.com",
                            Name = "admin",
                            Password = "21232f297a57a5a743894a0e4a801fc3",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("WebWorkshopManager.Entities.Models.Car", b =>
                {
                    b.HasOne("WebWorkshopManager.Entities.Models.Engine", "Engine")
                        .WithMany()
                        .HasForeignKey("EngineId");
                });

            modelBuilder.Entity("WebWorkshopManager.Entities.Models.Job", b =>
                {
                    b.HasOne("WebWorkshopManager.Entities.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.HasOne("WebWorkshopManager.Entities.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("WebWorkshopManager.Entities.Models.User", "Worker")
                        .WithMany()
                        .HasForeignKey("WorkerId");
                });

            modelBuilder.Entity("WebWorkshopManager.Entities.Models.JobItem", b =>
                {
                    b.HasOne("WebWorkshopManager.Entities.Models.Job", "Job")
                        .WithMany("Items")
                        .HasForeignKey("JobId");

                    b.HasOne("WebWorkshopManager.Entities.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("WebWorkshopManager.Entities.Models.User", b =>
                {
                    b.HasOne("WebWorkshopManager.Entities.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
